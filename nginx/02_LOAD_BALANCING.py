# ==================================================================================================================
# LOAD-BALANCING
# ==================================================================================================================

===== ТИП БАЛАНСИРОВКИ 

# Тип балансировки нужно прописать над списком серверов hash, ip_hash, least_conn, least_time или random.
# weight=1 по умолчанию;
# server 192.0.0.1 backup; резервный сервер и не принимает запросы, если оба других сервера недоступны.

http {
    upstream backend {
        # hash
        # ip_hash
        # least_conn,
        # least_time
        # random
        server backend1.example.com weight=5;
        server backend2.example.com;
        server 192.0.0.1 backup;
    }
    
    server {
        location / {
            proxy_pass http://backend;
        }
    }
}


Round Robin (метод по умолчанию)
# запросы распределяются по серверам равномерно с учетом веса серверов.

Least Connections 
# Запрос отправляется на сервер с наименьшим количеством активных подключений, опять же с учетом веса сервера

IP Hash
# Сервер, на который отправляется запрос, определяется по IP-адресу клиента. 
# Для вычисления значения хеш-функции используются либо первые три октета адреса IPv4, либо весь адрес IPv6. 
# Метод гарантирует, что запросы с одного и того же адреса попадут на один и тот же сервер, если он не доступен. 

Generic Hash
# Сервер определяется на основе определяемого пользователем ключа, который может быть текстовой строкой, переменной или комбинацией. 
# Например, ключ может быть парным исходным IP-адресом и портом или URI:над списком hash $request_uri consistent;
 
Least Time (NGINX Plus only)
# Сервер с наименьшей средней задержкой и наименьшим количеством активных подключений

Random
# Случайный из списка